<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hobby.my.board.dao.IBoardDAO">

	<!-- 게시물 목록을 검색 조건 및 카테고리로 조회하는 쿼리 -->
	<select id="getBoardList" parameterType="SearchVO" resultType="BoardVO">
	    SELECT *
	    FROM (
	        SELECT rownum as rnum, a.*
	        FROM (
	            SELECT a.bo_no, a.bo_title, a.bo_category, b.category_name, a.bo_writer,
	                   a.bo_hit, a.bo_like, a.bo_reg_date, a.bo_mod_date
	            FROM BOARD a
	            JOIN boardcategory b ON a.bo_category = b.category_id
	            WHERE a.bo_del_yn = 'N'
	            <include refid="boardSearch"></include>  <!-- 검색 조건 추가 -->
	            ORDER BY a.bo_no DESC
	        ) a
	    ) b
	    WHERE rnum BETWEEN #{firstRow} AND #{lastRow}
	</select>
	
	<!-- 총 레코드 수 조회 -->
	<select id="getTotalRowCount" resultType="int" parameterType="SearchVO">
	    SELECT COUNT(*)
	    FROM BOARD a
	    WHERE 1 = 1
	    <include refid="boardSearch"></include>  <!-- 검색 조건을 포함한 쿼리 -->
	</select>
	
	<!-- 검색 조건 -->
	<sql id="boardSearch">
	    <if test="searchWord != null and searchWord != ''">
	        AND (a.bo_title LIKE '%' || #{searchWord} || '%' OR a.bo_content LIKE '%' || #{searchWord} || '%')
	    </if>
	    <if test="searchCategory != null and searchCategory != ''">
	        AND TRIM(a.bo_category) = TRIM(#{searchCategory})
	    </if>
	</sql>
	
	
	<!-- 게시물 상세 조회 쿼리 -->
	<select id="getBoard" resultType="BoardVO" parameterType="int">
	    SELECT a.bo_no
	         , a.bo_title
	         , a.bo_category
	         , b.category_name
	         , a.bo_writer
	         , a.bo_content
	         , a.bo_hit
	         , a.bo_like
	         , a.bo_reg_date
	         , a.bo_mod_date
	         , c.profile_img
	    FROM BOARD a
	    , boardcategory b
	    , member c
	    WHERE TRIM(a.bo_category) = b.category_id
	    AND a.bo_no = #{boNo}
	    AND a.bo_writer = c.mem_nic
	    AND a.bo_del_yn = 'N'
	</select>
	
	<!-- 게시물 작성 쿼리  -->
	<insert id="insertBoard" parameterType="BoardVO">
	    INSERT INTO BOARD(bo_no, bo_title, bo_category, bo_writer, bo_content, bo_reg_date, bo_like)
	    VALUES (seq_board.nextval, #{boTitle}, #{boCategory}, #{boWriter}, #{boContent}, SYSDATE, 0)
	</insert>
	
	<!-- 조회수 업데이트 쿼리 -->
	<update id="updateHit" parameterType="int">
	    UPDATE BOARD
	    SET bo_hit = NVL(bo_hit, 0) + 1
	    WHERE bo_no = #{boNo}
	</update>
	
	<!-- 게시물 좋아요  수  -->
	<select id="selectLike" parameterType="int" resultType="int" >
		SELECT bo_like
		FROM BOARD
		WHERE bo_no = #{boNo}
	</select>
	<!-- 좋아요 업데이트 쿼리 -->
	<update id="updateBoardLike" parameterType="int">
	    UPDATE BOARD SET bo_like =  COALESCE(bo_like, 0) + 1 
	    WHERE bo_no = #{boNo}
	</update>
	
	<!-- 지금은 적용 안됫지만 좋아요를 아이디당 1변씩만  하여고 하여 이 쿼리가 있음, 테이블 별도 필요(board_like - like_id, bo_no, mem_id, like_date  -->
	<select id="selectLikeCount" parameterType="map" resultType="int">
	    SELECT COUNT(*) 
	    FROM BORD_LIKE 
	    WHERE bo_no = #{boNo} 
	    AND mem_id = #{memId}
	</select>
	
	
	<select id="getCategory" parameterType="String" resultType="CategoryVO">
		SELECT category_id, category_name
		FROM BOARDCATEGORY
	</select>
	
	<!--  NULL 값을 마지막으로 보냄 -->
	<select id="mainBoard" resultType="BoardVO">
		SELECT b.bo_no
		     , b.bo_title
		     , b.bo_writer
		     , NVL(b.bo_like, 0) as bo_like
		     , b.bo_content
		     , m.profile_img
		FROM BOARD b
		JOIN member m ON b.bo_writer = m.mem_nic
		WHERE b.bo_del_yn = 'N'
		ORDER BY b.bo_like DESC NULLS LAST
		FETCH FIRST 10 ROWS ONLY
	
	</select>
	
</mapper>